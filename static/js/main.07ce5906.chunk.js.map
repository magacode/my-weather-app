{"version":3,"sources":["components/error-indicator/index.js","components/error-indicator/error-indicator.js","components/error-boundary/index.js","components/error-boundary/error-boundary.js","store/reducers/weather.js","store/constants/weather.js","store/reducers/weather-city.js","store/constants/weather-city.js","store/reducers/index.js","store/store.js","utils/axios-settings.js","api/weather-api.js","components/weather-item/index.js","components/weather-item/weather-item.js","components/weather-list/index.js","components/weather-list/weather-list.js","components/weather-table-cell/weather-table-cell.js","components/weather-table-cell/index.js","utils/date-format.js","components/weather-table/weather-table.js","components/weather-table/index.js","components/modal-body/index.js","components/modal-body/modal-body.js","store/actions/weather-city.js","components/modal/modal.js","components/modal/index.js","containers/weather-container.js","store/actions/weather.js","app/app.js","app/index.js","root.js","index.js"],"names":["ErrorIndicator","ErrorBoundary","state","hasError","this","setState","props","children","Component","initialState","loading","weatherData","error","weatherReducer","action","type","payload","weatherCityData","weatherCityReducer","combineReducers","store","createStore","reducers","compose","applyMiddleware","thunk","axios","create","baseURL","method","getWeatherData","a","API","get","getWeatherCityData","lat","lon","addr","WeatherItem","setIsOpen","setDataModal","coord","name","temp","main","ListItem","button","onClick","ListItemText","primary","Chip","color","label","Math","round","WeatherList","list","List","component","aria-label","map","data","id","key","WeatherTableCell","daily","item","dt","wind_speed","pressure","humidity","TableRow","TableCell","scope","milliseconds","currentDate","Date","date","getDate","month","getMonth","year","getFullYear","createDate","align","day","useStyles","makeStyles","table","minWidth","WeatherTable","classes","TableContainer","Paper","Table","className","TableHead","TableBody","ModalBody","connect","weatherCityLoading","weatherCityError","dispatch","getWeatherCityHandler","WeatherApi","useEffect","hasData","CircularProgress","theme","modal","paper","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","modalInner","width","maxWidth","height","maxHeight","overflow","position","top","left","transform","TransitionsModal","isOpen","isClose","Modal","aria-labelledby","aria-describedby","open","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","Button","variant","weatherLoading","weatherError","getWeatherHandler","useState","cityWeatherData","setCityWeatherData","root","flexGrow","App","Container","Grid","container","xs","Root","ReactDOM","render","document","querySelector"],"mappings":"gOAEeA,ECAQ,WACrB,OACE,6BACE,+HACA,sdCJSC,E,4MCGbC,MAAQ,CACNC,UAAU,G,kEAIVC,KAAKC,SAAS,CAAEF,UAAU,M,+BAI1B,OAAIC,KAAKF,MAAMC,SACN,kBAAC,EAAD,MAGFC,KAAKE,MAAMC,a,GAdqBC,a,wBCFrCC,EAAe,CACnBC,SAAS,EACTC,YAAa,GACbC,OAAO,GAgCMC,EA7BQ,WAAmC,IAAlCX,EAAiC,uDAAzBO,EAAcK,EAAW,uCAEvD,OAAOA,EAAOC,MAEZ,ICZiC,wBDa7B,OAAO,eACAb,GAGX,IChBiC,wBDiB7B,OAAO,2BACAA,GADP,IAEIQ,SAAS,EACTC,YAAaG,EAAOE,UAG5B,ICtBiC,wBDuB7B,MAAO,CACHN,SAAS,EACTC,YAAa,GACbC,MAAOE,EAAOE,SAGtB,QACI,OAAOd,IE9BTO,EAAe,CACnBC,SAAS,EACTO,gBAAiB,GACjBL,OAAO,GAgCMM,EA7BY,WAAmC,IAAlChB,EAAiC,uDAAzBO,EAAcK,EAAW,uCAE3D,OAAOA,EAAOC,MAEZ,ICZsC,6BDalC,OAAO,eACAb,GAGX,IChBsC,6BDiBlC,OAAO,2BACAA,GADP,IAEIQ,SAAS,EACTO,gBAAiBH,EAAOE,UAGhC,ICtBsC,6BDuBlC,MAAO,CACHN,SAAS,EACTO,gBAAiB,GACjBL,MAAOE,EAAOE,SAGtB,QACI,OAAOd,IE3BAiB,cAAgB,CAC7BN,iBACAK,uBCAaE,EAFDC,YAAYC,EAAUC,YAAQC,YAAgBC,O,qFCH7CC,E,OAAAA,EAAMC,OAAO,CACxBC,QAAS,0CACTC,OAAQ,QCYG,M,sCAZXC,e,sBAAiB,sBAAAC,EAAA,mKAEAC,EAAIC,IAFJ,kL,KAKjBC,mB,uCAAqB,iCAAAH,EAAA,6DAASI,EAAT,EAASA,IAAKC,EAAd,EAAcA,IACzBC,EADW,uBACYF,EADZ,gBACuBC,EADvB,yEAEJJ,EAAIC,IAAII,GAFJ,mF,2FCPVC,ECIK,SAAC,GAA8C,IAA5C3B,EAA2C,EAA3CA,YAAa4B,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aACrCC,EAAiC9B,EAAjC8B,MAAOC,EAA0B/B,EAA1B+B,KAAcC,EAAYhC,EAApBiC,KAAQD,KAE7B,OACE,kBAACE,EAAA,EAAD,CAAUC,QAAM,EAACC,QAAS,WACxBR,GAAU,GACVC,EAAa,CAAEE,OAAMD,YAErB,kBAACO,EAAA,EAAD,CAAcC,QAASP,IACrB,kBAACQ,EAAA,EAAD,CAAMC,MAAM,UAAUC,MAAOC,KAAKC,MAAMX,KAL5C,WCRWY,ECGK,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,KAAMjB,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aACtC,OACE,kBAACiB,EAAA,EAAD,CAAMC,UAAU,MAAMC,aAAW,gBAE7BH,EAAKI,KAAI,SAACC,GAAU,IACVC,EAAOD,EAAPC,GAER,OAAO,kBAAC,EAAD,CAAanD,YAAakD,EAAMtB,UAAWA,EAAWC,aAAcA,EAAcuB,IAAKD,S,kGCNxG,ICJeE,EDIU,SAAC,GACxB,OADsC,EAAZC,MACZL,KAAI,SAACM,GAAU,IACXC,EAA6CD,EAA7CC,GAAIxB,EAAyCuB,EAAzCvB,KAAMyB,EAAmCF,EAAnCE,WAAYC,EAAuBH,EAAvBG,SAAUC,EAAaJ,EAAbI,SAExC,OACE,kBAACC,EAAA,EAAD,CAAUR,IAAKI,GACb,kBAACK,EAAA,EAAD,CAAWd,UAAU,KAAKe,MAAM,OEZjC,SAAoBC,GAC/B,IAAMC,EAAc,IAAIC,KAAoB,IAAfF,GACvBG,EAAOF,EAAYG,UAGnBC,EADS,CAAC,qBAAM,qBAAM,qBAAM,qBAAM,qBAAM,qBAAM,qBAAM,qBAAM,qBAAM,qBAAM,qBAAM,sBAC7DJ,EAAYK,YAE3BC,EAAON,EAAYO,cAEzB,MAAM,GAAN,OAAUL,EAAV,YAAkBE,EAAlB,aAA4BE,GFIbE,CAAWhB,IAEd,kBAACK,EAAA,EAAD,CAAWY,MAAM,SAASzC,EAAK0C,KAC/B,kBAACb,EAAA,EAAD,CAAWY,MAAM,SAAShB,GAC1B,kBAACI,EAAA,EAAD,CAAWY,MAAM,SAASf,GAC1B,kBAACG,EAAA,EAAD,CAAWY,MAAM,SAASd,QGNpCgB,EAAYC,YAAW,CAC3BC,MAAO,CACLC,SAAU,OCZCC,MDgBA,SAAoBpF,GACjC,IAAMqF,EAAUL,IACRzB,EAASvD,EAATuD,KAER,OACE,kBAAC+B,EAAA,EAAD,CAAgBlC,UAAWmC,KACzB,kBAACC,EAAA,EAAD,CAAOC,UAAWJ,EAAQH,MAAO7B,aAAW,gBAC1C,kBAACqC,EAAA,EAAD,KACE,kBAACzB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,iCACA,kBAACA,EAAA,EAAD,CAAWY,MAAM,SAAjB,kFACA,kBAACZ,EAAA,EAAD,CAAWY,MAAM,SAAjB,qGACA,kBAACZ,EAAA,EAAD,CAAWY,MAAM,SAAjB,wGACA,kBAACZ,EAAA,EAAD,CAAWY,MAAM,SAAjB,8DAGJ,kBAACa,EAAA,EAAD,KACE,kBAAC,EAAD,CAAkBhC,MAAOJ,EAAKI,YEjCzBiC,GC0CAC,aAZS,SAAC,GAA4B,IAA1BjF,EAAyB,EAAzBA,mBACvB,MAAO,CACHkF,mBAAoBlF,EAAmBR,QACvC2F,iBAAkBnF,EAAmBN,MACrCK,gBAAiBC,EAAmBD,oBAIjB,SAACqF,GAAD,MAAe,CACtCC,sBAAuB,SAAC1C,GAAD,OAAUyC,GCrCF7D,EDqC8BoB,ECrC/B,uCAAW,WAAMyC,GAAN,iBAAAvE,EAAA,6DAE3CuE,EAAS,CACPvF,KhBPsC,+BgBIG,kBAQlByF,EAAWtE,mBAAmBO,GARZ,gBAQjCoB,EARiC,EAQjCA,KAERyC,EAAS,CACPvF,KhBdoC,6BgBepCC,QAAS6C,IAZ8B,gDAiBzCyC,EAAS,CACPvF,KhBpBoC,6BgBqBpCC,QAAQ,EAAD,KAnBgC,yDAAX,4DAACyB,MDwCpB0D,EAnCG,SAAC,GAMZ,IALCI,EAKF,EALEA,sBACAH,EAIF,EAJEA,mBACAC,EAGF,EAHEA,iBACApF,EAEF,EAFEA,gBACA4C,EACF,EADEA,KAGJ4C,qBAAU,WACNF,EAAsB1C,KACvB,CAACA,IAEJ,IAAM6C,IAAYN,GAAsBC,GAExC,OACI,oCACMD,GAAsB,kBAACO,EAAA,EAAD,MACtBN,GAAoB,kBAAC,EAAD,MACpBK,GAAW,kBAAC,EAAD,CAAc7C,KAAM5C,QElBvCqE,GAAYC,aAAW,SAACqB,GAAD,MAAY,CACvCC,MAAO,GACPC,MAAO,CACLC,gBAAiBH,EAAMI,QAAQC,WAAWH,MAC1CI,OAAQ,iBACRC,UAAWP,EAAMQ,QAAQ,GACzBC,QAAST,EAAMU,QAAQ,EAAG,EAAG,IAE/BC,WAAY,CACVC,MAAO,QACPC,SAAU,QACVC,OAAQ,QACRC,UAAW,QACXC,SAAU,OACVC,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,6BCxBAC,OD4BA,SAA0B3H,GAErC,IAAMqF,EAAUL,KACR4C,EAA0B5H,EAA1B4H,OAAQC,EAAkB7H,EAAlB6H,QAAStE,EAASvD,EAATuD,KAEzB,OACI,6BACI,kBAACuE,EAAA,EAAD,CACIC,kBAAgB,yBAChBC,mBAAiB,+BACjBvC,UAAWJ,EAAQkB,MACnB0B,KAAML,EACNM,QAASL,EACTM,sBAAoB,EACpBC,kBAAmBC,IACnBC,cAAe,CACXC,QAAS,MAGb,yBAAK9C,UAAWJ,EAAQ4B,YACxB,kBAACuB,EAAA,EAAD,CAAMC,GAAIb,GACN,yBAAKnC,UAAWJ,EAAQmB,OACpB,wBAAIhD,GAAG,0BAAP,kGAAqDD,EAAKnB,MAC1D,0BAAMoB,GAAG,gCAAT,gGACA,kBAAC,GAAD,CAAWD,KAAMA,EAAKpB,QACtB,kBAACuG,EAAA,EAAD,CAAQC,QAAQ,YAAY9F,MAAM,YAAYJ,QAAS,kBAAMoF,GAAQ,KAArE,oDEKThC,gBAZS,SAAC,GAAwB,IAAtBtF,EAAqB,EAArBA,eACzB,MAAO,CACLqI,eAAgBrI,EAAeH,QAC/ByI,aAActI,EAAeD,MAC7BD,YAAaE,EAAeF,gBAIL,SAAC2F,GAAD,MAAe,CACxC8C,kBAAmB,kBAAM9C,ECrDG,uCAAM,WAAMA,GAAN,iBAAAvE,EAAA,6DAElCuE,EAAS,CACPvF,KtBPiC,0BsBID,kBAQTyF,EAAW1E,iBARF,gBAQxB+B,EARwB,EAQxBA,KAERyC,EAAS,CACPvF,KtBd+B,wBsBe/BC,QAAS6C,IAZqB,gDAiBhCyC,EAAS,CACPvF,KtBpB+B,wBsBqB/BC,QAAQ,EAAD,KAnBuB,yDAAN,2DDwDfmF,EAlDU,SAAC,GAKnB,IAJLiD,EAII,EAJJA,kBACAF,EAGI,EAHJA,eACAC,EAEI,EAFJA,aACAxI,EACI,EADJA,YACI,EAE0B0I,oBAAS,GAFnC,mBAEInB,EAFJ,KAEY3F,EAFZ,OAG4C8G,mBAAS,CAAE3G,KAAM,GAAID,MAAO,CAAEN,IAAK,GAAIC,IAAK,MAHxF,mBAGIkH,EAHJ,KAGqBC,EAHrB,KAaI/F,EAAS7C,EAAT6C,KAERiD,qBAAU,WACR2C,MACC,IAEH,IAAM1C,IAAYwC,GAAkBC,GAEpC,OACI,oCACMD,GAAkB,kBAACvC,EAAA,EAAD,MAClBwC,GAAgB,kBAAC,EAAD,MAChBzC,GAAW,kBAAC,EAAD,CAAalD,KAAMA,EAAMjB,UAAWA,EAAWC,aAAc+G,IAE1E,kBAAC,GAAD,CAAkBrB,OAAQA,EAAQC,QAlBtB,WAClB5F,GAAU,IAiBoDsB,KAAMyF,QEnClEhE,GAAYC,aAAW,SAACqB,GAAD,MAAY,CACrC4C,KAAM,CACJC,SAAU,OCPDC,GDWH,WACV,IAAM/D,EAAUL,KAEhB,OACE,yBAAKS,UAAWJ,EAAQ6D,MACtB,kBAACG,EAAA,EAAD,CAAWlC,SAAS,MAClB,kBAACmC,EAAA,EAAD,CAAMC,WAAS,EAACvC,QAAS,GACvB,kBAACsC,EAAA,EAAD,CAAM1F,MAAI,EAAC4F,GAAI,IACb,kBAAC,GAAD,WEFGC,GAZF,WAET,OACE,kBAAC,EAAD,KACE,kBAAC,IAAD,CAAU3I,MAAOA,GACf,kBAAC,GAAD,SCPV4I,IAASC,OAAO,kBAAC,GAAD,MAAUC,SAASC,cAAc,Y","file":"static/js/main.07ce5906.chunk.js","sourcesContent":["import ErrorIndicator from \"./error-indicator\";\r\n\r\nexport default ErrorIndicator;","import React from \"react\";\r\n\r\nconst ErrorIndicator = () => {\r\n  return (\r\n    <div>\r\n      <div>Что-то пошло не так</div>\r\n      <div>\r\n        Попробуйте обновить вкладку браузера или повторите попытку через\r\n        несколько минут\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorIndicator;\r\n","import ErrorBoundary from \"./error-boundary\";\r\n\r\nexport default ErrorBoundary;","import React, { Component } from \"react\";\r\n\r\nimport ErrorIndicator from \"../error-indicator\";\r\n\r\nexport default class ErrorBoundary extends Component {\r\n  state = {\r\n    hasError: false,\r\n  };\r\n\r\n  componentDidCatch() {\r\n    this.setState({ hasError: true });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <ErrorIndicator />;\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n","import { FETCH_WEATHER_REQUEST, FETCH_WEATHER_SUCCESS, FETCH_WEATHER_FAILURE } from '../constants';\r\n\r\nconst initialState = {\r\n  loading: true,\r\n  weatherData: [],\r\n  error: false,\r\n};\r\n\r\nconst weatherReducer = (state = initialState, action) => {\r\n\r\n  switch(action.type) {        \r\n\r\n    case FETCH_WEATHER_REQUEST:\r\n        return {\r\n            ...state,\r\n        };\r\n\r\n    case FETCH_WEATHER_SUCCESS:\r\n        return {\r\n            ...state,\r\n            loading: false,\r\n            weatherData: action.payload,            \r\n        };\r\n\r\n    case FETCH_WEATHER_FAILURE:\r\n        return {\r\n            loading: false,\r\n            weatherData: [],\r\n            error: action.payload,\r\n        };\r\n\r\n    default: \r\n        return state;\r\n  }\r\n\r\n}\r\n\r\nexport default weatherReducer;","export const FETCH_WEATHER_REQUEST = 'FETCH_WEATHER_REQUEST';\r\nexport const FETCH_WEATHER_SUCCESS = 'FETCH_WEATHER_SUCCESS';\r\nexport const FETCH_WEATHER_FAILURE = 'FETCH_WEATHER_FAILURE';","import { FETCH_WEATHER_CITY_REQUEST, FETCH_WEATHER_CITY_SUCCESS, FETCH_WEATHER_CITY_FAILURE } from '../constants';\r\n\r\nconst initialState = {\r\n  loading: true,\r\n  weatherCityData: [],\r\n  error: false,\r\n};\r\n\r\nconst weatherCityReducer = (state = initialState, action) => {\r\n\r\n  switch(action.type) {        \r\n\r\n    case FETCH_WEATHER_CITY_REQUEST:\r\n        return {\r\n            ...state,\r\n        };\r\n\r\n    case FETCH_WEATHER_CITY_SUCCESS:\r\n        return {\r\n            ...state,\r\n            loading: false,\r\n            weatherCityData: action.payload,\r\n        };\r\n\r\n    case FETCH_WEATHER_CITY_FAILURE:\r\n        return {\r\n            loading: false,\r\n            weatherCityData: [],\r\n            error: action.payload,\r\n        };\r\n\r\n    default: \r\n        return state;\r\n  }\r\n\r\n}\r\n\r\nexport default weatherCityReducer;","export const FETCH_WEATHER_CITY_REQUEST = 'FETCH_WEATHER_CITY_REQUEST';\r\nexport const FETCH_WEATHER_CITY_SUCCESS = 'FETCH_WEATHER_CITY_SUCCESS';\r\nexport const FETCH_WEATHER_CITY_FAILURE = 'FETCH_WEATHER_CITY_FAILURE';","import { combineReducers } from 'redux';\r\n\r\nimport weatherReducer from './weather';\r\nimport weatherCityReducer from './weather-city';\r\n\r\nexport default combineReducers({\r\n  weatherReducer,\r\n  weatherCityReducer,\r\n});","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport reducers from './reducers';\r\n\r\nconst store = createStore(reducers, compose(applyMiddleware(thunk)));\r\n\r\nexport default store;","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: \"https://api.openweathermap.org/data/2.5\",\r\n    method: 'get',\r\n});","import API from '../utils/axios-settings';\r\n\r\nclass WeatherApi {\r\n\r\n    getWeatherData = async () => { \r\n        const addr = `/group?id=524901,703448,2643743&lang=ru&units=metric&appid=b8dd12b10a5e9b631f1d9b511e5e36b3`;\r\n        return await API.get(addr);\r\n    };\r\n\r\n    getWeatherCityData = async ({ lat, lon }) => { \r\n        const addr = `/onecall?lat=${lat}&lon=${lon}&lang=ru&units=metric&appid=b8dd12b10a5e9b631f1d9b511e5e36b3`;\r\n        return await API.get(addr);\r\n    };\r\n\r\n}\r\n\r\nexport default new WeatherApi();","import WeatherItem from './weather-item';\r\n\r\nexport default WeatherItem;","import React from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Chip from '@material-ui/core/Chip';\r\n\r\nconst WeatherItem = ({ weatherData, setIsOpen, setDataModal }) => {\r\n  const { coord, name, main: { temp  } } = weatherData;\r\n\r\n  return (\r\n    <ListItem button onClick={() => {\r\n      setIsOpen(true);\r\n      setDataModal({ name, coord })\r\n    }}>\r\n      <ListItemText primary={name} />\r\n        <Chip color=\"primary\" label={Math.round(temp)} />\r\n        &#8451;\r\n      </ListItem>\r\n  )\r\n      \r\n}\r\n\r\nexport default WeatherItem;","import WeatherList from './weather-list';\r\n\r\nexport default WeatherList;","import React from 'react';\r\nimport List from '@material-ui/core/List';\r\n\r\nimport WeatherItem from '../weather-item';\r\n\r\nconst WeatherList = ({ list, setIsOpen, setDataModal }) => {\r\n  return (\r\n    <List component=\"nav\" aria-label=\"city weather\">\r\n      {\r\n        list.map((data) => {\r\n          const { id } = data;\r\n\r\n          return <WeatherItem weatherData={data} setIsOpen={setIsOpen} setDataModal={setDataModal} key={id} />;\r\n        })\r\n      }\r\n  </List>\r\n  );        \r\n}\r\n\r\nexport default WeatherList;","import React from 'react';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nimport createDate from '../../utils/date-format';\r\n\r\nconst WeatherTableCell = ({ daily }) => {  \r\n  return  daily.map((item) => {\r\n            const { dt, temp, wind_speed, pressure, humidity } = item;\r\n\r\n            return (\r\n              <TableRow key={dt}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {createDate(dt)}\r\n                </TableCell>\r\n                <TableCell align=\"right\">{temp.day}</TableCell>\r\n                <TableCell align=\"right\">{wind_speed}</TableCell>\r\n                <TableCell align=\"right\">{pressure}</TableCell>\r\n                <TableCell align=\"right\">{humidity}</TableCell>               \r\n              </TableRow>\r\n            )\r\n          });\r\n}\r\n\r\nexport default WeatherTableCell;","import WeatherTableCell from './weather-table-cell';\r\n\r\nexport default WeatherTableCell;","export default function createDate(milliseconds) {\r\n    const currentDate = new Date(milliseconds * 1000);\r\n    const date = currentDate.getDate();\r\n\r\n    const months = ['янв','фев','мар','апр','май','июн','июл','авг','сен','окт','ноя','дек'];\r\n    const month = months[currentDate.getMonth()];\r\n\r\n    const year = currentDate.getFullYear();\r\n\r\n    return `${date} ${month}. ${year}`;\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport WeatherTableCell from '../weather-table-cell';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\nexport default function BasicTable(props) {\r\n  const classes = useStyles();\r\n  const { data } = props;\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Дата</TableCell>\r\n            <TableCell align=\"right\">Температура&nbsp;(ц)</TableCell>\r\n            <TableCell align=\"right\">Скорость ветра&nbsp;(мс)</TableCell>\r\n            <TableCell align=\"right\">Атм. давление&nbsp;(мм рт.)</TableCell>\r\n            <TableCell align=\"right\">Влажноть &nbsp;(%)</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          <WeatherTableCell daily={data.daily} />\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import WeatherTable from './weather-table';\r\n\r\nexport default WeatherTable;","import ModalBody from './modal-body';\r\n\r\nexport default ModalBody;","import React, { Component, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport ErrorIndicator from '../error-indicator';\r\nimport WeatherTable from '../weather-table';\r\nimport { getWeatherCityData } from '../../store/actions';\r\n\r\nconst ModalBody = ({ \r\n        getWeatherCityHandler, \r\n        weatherCityLoading, \r\n        weatherCityError, \r\n        weatherCityData, \r\n        data, \r\n}) => {\r\n\r\n    useEffect(() => { \r\n        getWeatherCityHandler(data);\r\n    }, [data]);\r\n    \r\n    const hasData = !(weatherCityLoading || weatherCityError);\r\n\r\n    return (\r\n        <>  \r\n            { weatherCityLoading && <CircularProgress /> }\r\n            { weatherCityError && <ErrorIndicator /> }\r\n            { hasData && <WeatherTable data={weatherCityData}  /> } \r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ weatherCityReducer }) => {\r\n    return {\r\n        weatherCityLoading: weatherCityReducer.loading,\r\n        weatherCityError: weatherCityReducer.error,\r\n        weatherCityData: weatherCityReducer.weatherCityData,        \r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    getWeatherCityHandler: (data) => dispatch(getWeatherCityData(data)), \r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalBody)\r\n","import { FETCH_WEATHER_CITY_REQUEST, FETCH_WEATHER_CITY_SUCCESS, FETCH_WEATHER_CITY_FAILURE } from '../constants';\r\n\r\nimport WeatherApi from '../../api/weather-api';\r\n\r\nexport const getWeatherCityData = (coord) => async dispatch =>{\r\n \r\n  dispatch({\r\n    type: FETCH_WEATHER_CITY_REQUEST,\r\n  });\r\n\r\n  try {\r\n  \r\n    const { data } = await WeatherApi.getWeatherCityData(coord);\r\n  \r\n    dispatch({\r\n      type: FETCH_WEATHER_CITY_SUCCESS,\r\n      payload: data,        \r\n    });\r\n\r\n  } catch(error) {\r\n\r\n    dispatch({\r\n      type: FETCH_WEATHER_CITY_FAILURE,\r\n      payload: error,\r\n    })\r\n\r\n  } \r\n\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport ModalBody from '../modal-body';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {},\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n  modalInner: {\r\n    width: '100vw',\r\n    maxWidth: '750px',\r\n    height: '500px',\r\n    maxHeight: '100vh',\r\n    overflow: 'auto',\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n  },\r\n}));\r\n\r\nexport default function TransitionsModal(props) {\r\n\r\n    const classes = useStyles();\r\n    const { isOpen, isClose, data } = props;\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                className={classes.modal}\r\n                open={isOpen}\r\n                onClose={isClose}\r\n                closeAfterTransition\r\n                BackdropComponent={Backdrop}\r\n                BackdropProps={{\r\n                    timeout: 500,\r\n                }}\r\n            >\r\n                <div className={classes.modalInner}>\r\n                <Fade in={isOpen}>\r\n                    <div className={classes.paper}>\r\n                        <h2 id=\"transition-modal-title\">Прогноз погоды в г. {data.name}</h2>\r\n                        <span id=\"transition-modal-description\">прогноз на неделю</span>\r\n                        <ModalBody data={data.coord} />\r\n                        <Button variant=\"contained\" color=\"secondary\" onClick={() => isClose(true)}>Закрыть</Button>\r\n                    </div>\r\n                </Fade>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}","import TransitionsModal from './modal';\r\n\r\nexport default TransitionsModal;","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport ErrorIndicator from '../components/error-indicator';\r\nimport { getWeatherData } from '../store/actions';\r\nimport WeatherList from '../components/weather-list';\r\nimport TransitionsModal from '../components/modal';\r\n\r\nconst WeatherContainer = ({ \r\n  getWeatherHandler, \r\n  weatherLoading, \r\n  weatherError, \r\n  weatherData  \r\n}) => {\r\n\r\n  const [ isOpen, setIsOpen ] = useState(false);\r\n  const [ cityWeatherData, setCityWeatherData ] = useState({ name: '', coord: { lat: '', lon: '' } });\r\n\r\n  const handleOpen = () => {\r\n    setIsOpen(true);\r\n  };\r\n  \r\n  const handleClose = () => {\r\n    setIsOpen(false);\r\n  };\r\n\r\n  const { list } = weatherData;\r\n\r\n  useEffect(() => { \r\n    getWeatherHandler()\r\n  }, [])\r\n\r\n  const hasData = !(weatherLoading || weatherError);    \r\n\r\n  return (        \r\n      <>\r\n          { weatherLoading && <CircularProgress /> }\r\n          { weatherError && <ErrorIndicator /> }\r\n          { hasData && <WeatherList list={list} setIsOpen={setIsOpen} setDataModal={setCityWeatherData} /> }  \r\n\r\n          <TransitionsModal isOpen={isOpen} isClose={handleClose} data={cityWeatherData} />\r\n      </>        \r\n  )\r\n    \r\n};\r\n\r\nconst mapStateToProps = ({ weatherReducer }) => {\r\n  return {\r\n    weatherLoading: weatherReducer.loading,\r\n    weatherError: weatherReducer.error,\r\n    weatherData: weatherReducer.weatherData,        \r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getWeatherHandler: () => dispatch(getWeatherData()), \r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WeatherContainer)\r\n","import { FETCH_WEATHER_REQUEST, FETCH_WEATHER_SUCCESS, FETCH_WEATHER_FAILURE } from '../constants';\r\n\r\nimport WeatherApi from '../../api/weather-api';\r\n\r\nexport const getWeatherData = () => async dispatch =>{\r\n\r\n  dispatch({\r\n    type: FETCH_WEATHER_REQUEST,\r\n  });\r\n\r\n  try {\r\n\r\n    const { data } = await WeatherApi.getWeatherData();\r\n\r\n    dispatch({\r\n      type: FETCH_WEATHER_SUCCESS,\r\n      payload: data,        \r\n    });\r\n\r\n  } catch(error) {\r\n\r\n    dispatch({\r\n      type: FETCH_WEATHER_FAILURE,\r\n      payload: error,\r\n    })\r\n\r\n  } \r\n\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nimport WeatherContainer from '../containers/weather-container';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n  }));\r\n\r\nconst App = () => {\r\n  const classes = useStyles();\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n      <Container maxWidth=\"sm\">\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>            \r\n            <WeatherContainer /> \r\n          </Grid>      \r\n        </Grid>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import App from './app';\r\n\r\nexport default App;","import React from 'react';\r\n\r\nimport ErrorBoundary from './components/error-boundary';\r\nimport store from './store/store';\r\nimport { Provider } from \"react-redux\";\r\nimport App from './app';\r\n\r\nconst Root = () => {      \r\n  \r\n    return (\r\n      <ErrorBoundary>\r\n        <Provider store={store}>\r\n          <App />\r\n        </Provider>        \r\n      </ErrorBoundary>      \r\n    );      \r\n  \r\n}\r\n\r\nexport default Root;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport Root from './root';\r\n\r\nReactDOM.render(<Root />, document.querySelector(\"#root\"));"],"sourceRoot":""}